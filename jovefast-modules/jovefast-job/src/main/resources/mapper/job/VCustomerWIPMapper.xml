<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jovefast.job.mapper.VCustomerWIPMapper">

    <select id="listOuterCustomerWIPExport" parameterType="java.util.HashMap" resultType="VCustomerWipDTO" timeout="1920"><!-- 查询超时32分钟，断开操作，起到保护数据库服务的作用-->
        EXECUTE dbo.SP_WIP_STATUS_Outer #{status},#{salesorder},#{customertype},#{deliveryresponse1},#{deliveryresponse2},#{productionmodel},#{ent_start_date},#{ent_end_date},1,#{pcbname},#{customerregion}
    </select>
    <select id="listInnerCustomerWIPExport" resultType="VCustomerWipDTO" parameterType="java.util.HashMap" timeout="1920"><!-- 查询超时16分钟，断开操作，起到保护数据库服务的作用-->
        EXECUTE dbo.SP_WIP_STATUS_Inner #{rootptr},#{pcbname}
    </select>

    <select id="listBackLogCustomerWIP" resultType="DetailCustomerWipDTO" parameterType="java.util.HashMap">
        SELECT DISTINCT
        DATA0060.SALES_ORDER salesorder,
        DATA0006.WORK_ORDER_NUMBER workorder,
        CONVERT(varchar(100), DATA0060.SCH_DATE, 23) schdate,
        DATA9977.GROUPNAME groupname,
        DATA9977.CUST_CODE custcode,
        DATA0006.QUAN_SCH/ ( CASE WHEN ISNULL( DATA0047.UNIT_VALUE, 0 ) = 0 THEN 1 ELSE DATA0047.UNIT_VALUE END ) * DATA0067.QUAN_BOM demandnumber,
        DATA0006.QUAN_SCH/ ( CASE WHEN ISNULL( DATA0047.UNIT_VALUE, 0 ) = 0 THEN 1 ELSE DATA0047.UNIT_VALUE END ) * DATA0067.QUAN_BOM -
        ( DATA0067.quan_issued+ DATA0067.quan_alt1_issued+ DATA0067.quan_alt2_issued+ DATA0067.quan_alt3_issued+ DATA0067.quan_alt4_issued+ DATA0067.quan_alt5_issued ) netdemand,
        P.PRODUCT_NAME productname,
        DATA0017.INV_PART_NUMBER invpartnumber,
        DATA0017.INV_PART_DESCRIPTION partdescription,
        DATA0050.CUSTOMER_PART_NUMBER customerpartnumber,
        CONVERT(varchar(100), P.vrt, 23) vrt,
        CONVERT(varchar(100), P.vtt, 23) vtt,
        P.unitname,
        P.SUM_QUAN_ON_HAND inventory,
        P.AVL_STOCK avlstock,
        P.PROD_CODE prodcode,
        P.plant1,
        P.plant2,
        P.plant3,
        d101.remark
        FROM DATA0060 with(nolock)
        LEFT OUTER JOIN DATA9977 with(nolock) ON DATA9977.D10_RKEY= DATA0060.CUSTOMER_PTR
        LEFT OUTER JOIN DATA0054 with(nolock) ON DATA0054.SO_PTR=DATA0060.RKEY
        LEFT OUTER JOIN DATA0006 with(nolock) ON (DATA0054.WO_PTR=DATA0006.rkey OR DATA0054.WO_PTR=DATA0006.ROOT_PTR)
        LEFT OUTER JOIN DATA0050 with(nolock) ON DATA0006.CUST_PART_PTR=DATA0050.RKEY
        LEFT OUTER JOIN DATA0067 with(nolock) ON DATA0067.WO_PTR=DATA0006.RKEY
        LEFT OUTER JOIN DATA0047 with(nolock) ON DATA0047.TTYPE=2 AND DATA0047.SOURCE_POINTER=DATA0006.CUST_PART_PTR AND DATA0067.UNIT_PTR=DATA0047.UNIT_POINTER
        LEFT OUTER JOIN DATA0017 with(nolock) ON DATA0067.INVT_PTR=DATA0017.RKEY AND DATA0017.P_M='P'
        LEFT OUTER JOIN (
        SELECT DATA0008.PROD_CODE,DATA0008.PRODUCT_NAME,DATA0017.RKEY,
        vt.REQ_DATE vrt,
        vt.TDATE vtt,
        vt.UNIT_NAME unitname,
        SUM(ISNULL(DATA0020.QUAN_ON_HAND,0)) AS SUM_QUAN_ON_HAND,
        SUM(CASE WHEN (DATA0017.SHELF_LIFE>0 AND DATA0020.EXPIRED_DATE>GETDATE()) OR DATA0017.SHELF_LIFE=0 THEN DATA0020.QUAN_ON_HAND-DATA0020.QUAN_ALLOCATED ELSE 0 END) AVL_STOCK,
        SUM(case when SUBSTRING(ISNULL(DATA0016.location,''),1,1)='一' then DATA0020.QUAN_ON_HAND else 0 end) plant1,
        SUM(case when SUBSTRING(ISNULL(DATA0016.location,''),1,1)='二' then DATA0020.QUAN_ON_HAND else 0 end) plant2,
        SUM(case when SUBSTRING(ISNULL(DATA0016.location,''),1,1)='三' then DATA0020.QUAN_ON_HAND else 0 end) plant3
        FROM DATA0017
        LEFT OUTER JOIN DATA0020 with(nolock) ON DATA0020.INVENTORY_POINTER=DATA0017.RKEY
        LEFT OUTER JOIN DATA0008 with(nolock) ON DATA0017.PROD_CODE_SELL_PTR=DATA0008.RKEY
        LEFT OUTER JOIN (SELECT *,row_number ( ) OVER ( partition BY d17_rkey ORDER BY REQ_DATE DESC ) nm FROM dbo.V_INVT_PO_INFO with(nolock)) vt ON vt.INV_PART_NUMBER=DATA0017.INV_PART_NUMBER AND nm=1
        LEFT OUTER JOIN DATA0019 with(nolock) ON DATA0020.INVT_WHSE_LOC_PTR= DATA0019.RKEY
        LEFT OUTER JOIN DATA0016 with(nolock) ON DATA0019.LOCATION_PTR=DATA0016.RKEY
        GROUP BY DATA0008.PRODUCT_NAME,DATA0017.RKEY,DATA0008.PROD_CODE,vt.REQ_DATE,vt.TDATE,vt.UNIT_NAME
        ) AS P ON DATA0017.RKEY = P.RKEY
        LEFT OUTER JOIN (
        SELECT mo,wo,mfg,partnumber,remark FROM
        ( SELECT mo,wo,mfg,partnumber,remark, row_number ( ) OVER ( partition BY mo,wo,mfg,partnumber ORDER BY replydate DESC ) nm FROM DATA10001 )X WHERE nm = 1
        ) d101  ON d101.mo=DATA0060.SALES_ORDER AND d101.mfg=DATA0050.CUSTOMER_PART_NUMBER AND d101.wo=DATA0006.WORK_ORDER_NUMBER AND d101.partnumber=DATA0017.INV_PART_NUMBER COLLATE Chinese_PRC_CI_AS
        <where>
            DATA0060.STATUS=1 AND
            P.PROD_CODE in ( 'B', 'P', 'F' )
            <if test="mo !=null and mo != ''">
                and  DATA0060.SALES_ORDER LIKE '%'+#{mo}+'%'
            </if>
            <if test="wo !=null and wo != ''">
                and  DATA0006.WORK_ORDER_NUMBER LIKE '%'+#{wo}+'%'
            </if>
            <if test="customerpartnumber !=null and customerpartnumber != ''">
                and  DATA0050.CUSTOMER_PART_NUMBER LIKE '%'+#{customerpartnumber}+'%'
            </if>
            <if test="productname !=null and productname != ''">
                and P.PROD_CODE =#{productname}
            </if>
        </where>
        ORDER BY DATA0060.SALES_ORDER,DATA0006.WORK_ORDER_NUMBER,P.PRODUCT_NAME
    </select>

</mapper>
